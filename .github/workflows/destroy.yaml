name: Destroy Infrastructure

on:
  workflow_dispatch: # Allows manual triggering
    inputs:
      environment:
        description: 'Environment to destroy (qa, main, dev)'
        required: true
        type: choice
        options:
          - qa
          - main
          - dev

permissions:
  id-token: write
  contents: read

env:
  # These environment variables will be available to all jobs
  GCP_WIF_PROVIDER: ${{ secrets.GCP_WIF_PROVIDER }}
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ vars.GCP_REGION_CH }}
  TF_STATE_BUCKET: terraform-state-${{ github.event.inputs.environment }}-${{ secrets.GCP_PROJECT_NUMBER }}
  ENVIRONMENT: ${{ github.event.inputs.environment }}

jobs:
  destroy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_WIF_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" \
            -backend-config="prefix=terraform-state"
        working-directory: infra/

      - name: Terraform Plan (Destroy)
        run: terraform plan -destroy -var="project_id=${{ env.GCP_PROJECT_ID }}" -var="region=${{ env.GCP_REGION }}" -var="location=${{ env.GCP_REGION }}" -var="environment=${{ env.ENVIRONMENT }}" -var-file="${{ env.ENVIRONMENT }}.tfvars"
        working-directory: infra/

      - name: Terraform Destroy
        run: |
          terraform destroy -auto-approve -var="project_id=${{ env.GCP_PROJECT_ID }}" -var="region=${{ env.GCP_REGION }}" -var="location=${{ env.GCP_REGION }}" -var="environment=${{ env.ENVIRONMENT }}" -var-file="${{ env.ENVIRONMENT }}.tfvars"
        working-directory: infra/

      - name: Destroy Terraform State Bucket
        run: |
          echo "Destroying Terraform state bucket gs://${{ env.TF_STATE_BUCKET }}..."
          gcloud storage buckets delete "gs://${{ env.TF_STATE_BUCKET }}" --quiet
        continue-on-error: true # Allow the workflow to continue even if this step fails
