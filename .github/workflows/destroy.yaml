name: Destroy Infra

on:
  workflow_dispatch:



permissions:
  id-token: write
  contents: read

jobs:
  destroy:
    name: Destroy Backend
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    env:
      GCP_WIF_PROVIDER: ${{ secrets.GCP_WIF_PROVIDER }}
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION: ${{ vars.GCP_REGION_CH }}

      # Terraform variables
      TF_STATE_BUCKET: terraform-state-${{ github.ref_name }}-${{ secrets.GCP_PROJECT_NUMBER }}
      ENVIRONMENT: ${{ github.ref_name }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        id: auth
        with:
          workload_identity_provider: ${{ env.GCP_WIF_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      # --- Terraform Backend Setup ---
      - name: Ensure Terraform State Bucket Exists
        run: |
          BUCKET_NAME="${{ env.TF_STATE_BUCKET }}"
          PROJECT_ID="${{ env.GCP_PROJECT_ID }}"
          REGION="${{ env.GCP_REGION }}"

          # Check if the bucket exists
          if gcloud storage buckets describe "gs://${BUCKET_NAME}" --project="${PROJECT_ID}" > /dev/null 2>&1; then
            echo "Terraform state bucket gs://${BUCKET_NAME} already exists."
          else
            echo "Terraform state bucket gs://${BUCKET_NAME} does not exist."
            exit 0
          fi
        env: # Re-define env for clarity within the step script, although inherited
          TF_STATE_BUCKET_NAME: ${{ env.TF_STATE_BUCKET }}
          GCP_PROJECT_ID: ${{ env.GCP_PROJECT_ID }}
          GCP_REGION: ${{ env.GCP_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{ env.TF_STATE_BUCKET }}"
        working-directory: infra/

      - name: Terraform Select Workspace
        run: terraform workspace select ${{ env.ENVIRONMENT }}
        working-directory: infra/

      - name: Terraform Plan (Destroy)
        run: terraform plan -destroy
        working-directory: infra/

      - name: Terraform Apply (Destroy)
        run: terraform apply -destroy -auto-approve
        working-directory: infra/

      - name: Terraform Workspace Select Default
        run: terraform workspace select default
        working-directory: infra/

      - name: Terraform Workspace Delete
        run: terraform workspace delete ${{ env.ENVIRONMENT }}
        working-directory: infra/
        continue-on-error: true